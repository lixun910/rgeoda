% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{maxp_sa}
\alias{maxp_sa}
\title{A simulated annealing algorithm to solve the max-p-region problem}
\usage{
maxp_sa(
  w,
  data,
  bound_vals,
  min_bound,
  cooling_rate,
  sa_maxit = 1,
  iterations = 99,
  initial_regions = c(0),
  distance_method = "euclidean",
  random_seed = 123456789
)
}
\arguments{
\item{w}{An instance of Weight class}

\item{data}{A list of numeric vectors of selected variable}

\item{bound_vals}{A numeric vector of selected bounding variable}

\item{min_bound}{A minimum value that the sum value of bounding variable int each cluster should be greater than}

\item{cooling_rate}{The cooling rate of a simulated annealing algorithm. Defaults to 0.85}

\item{sa_maxit}{(optional): The number of iterations of simulated annealing. Defaults to 1}

\item{iterations}{(optional): The number of iterations of greedy algorithm. Defaults to 99.}

\item{initial_regions}{(optional): The initial regions that the local search starts with. Default is empty. means the local search starts with a random process to "grow" clusters}

\item{distance_method}{(optional) The distance method used to compute the distance betwen observation i and j. Defaults to "euclidean". Options are "euclidean" and "manhattan"}

\item{random_seed}{(optional) The seed for random number generator. Defaults to 123456789.}
}
\value{
A list of numeric vectors represents a group of clusters
}
\description{
The max-p-region problem is a special case of constrained clustering where a finite number of geographical areas, n, are aggregated into the maximum number of regions, p, such that each region satisfies the following const raints: 1. The areas within a region must be geographically connected.
}
